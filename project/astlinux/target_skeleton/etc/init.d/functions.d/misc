#
# Function include file for init.d/
#
# Miscellaneous Tools
#
# Convention, begin included functions with SYS_
# SYS_function_name()
#

SYS_gen_etc_hosts() {
  local ip hostip hostipv6 IFS
  local dd_host interface ip_list
  local ipv4_list="$INTIP"
  local ipv6_if_list="$INTIF"

  for i in $(seq 2 ${INTIF_COUNT:-4}); do
    eval _IP="\$INT${i}IP"
    eval _IF="\$INT${i}IF"
    ipv4_list="$ipv4_list $_IP"
    ipv6_if_list="$ipv6_if_list $_IF"
  done
  ipv4_list="$ipv4_list $DMZIP"
  ipv6_if_list="$ipv6_if_list $DMZIF"

  # find the first internal IPv4 address from list of static IP addresses
  hostip=$(echo $ipv4_list | xargs | cut -d' ' -f 1)

  echo "# Automatically generated from internal state.
127.0.0.1	localhost${hostip:+
$hostip	$HOSTNAME.$DOMAIN $HOSTNAME}"

  if [ "$IPV6" = "yes" ]; then
    echo "
::1	localhost ip6-localhost ip6-loopback
ff02::1	ip6-allnodes
ff02::2	ip6-allrouters"
    # find the first internal IPv6 address from list of internal interfaces
    for interface in $ipv6_if_list; do
      ip_list=$(ip -6 -o addr show dev $interface scope global 2>/dev/null | sed -n -r -e 's/.*inet6 *([0-9a-fA-F:]+).*$/\1/p')
      if [ -n "$ip_list" ]; then
        break
      fi
    done
    for hostipv6 in $ip_list; do
      echo "$hostipv6	$HOSTNAME.$DOMAIN $HOSTNAME"
    done
  fi

  # DDHOST may not be a pure DNS Name, purify it
  dd_host="$(echo "$DDHOST" | sed 's/[, ].*//')"
  if [ -n "$dd_host" ] && [ "$dd_host" != "$HOSTNAME.$DOMAIN" ] && [ -n "$hostip" ]; then
    # only add DDHOST if it is not he same as my hostname.domain so we
    # don't duplicate DNS records
    echo "$hostip	$dd_host"
  fi

  if [ -f /stat/etc/hosts ]; then
    echo ""
    cat /stat/etc/hosts
  fi

  if [ -f /mnt/kd/hosts ]; then
    echo ""
    cat /mnt/kd/hosts
  fi

  if [ -n "$STATICHOSTS" ]; then

    echo "
# generated from STATICHOSTS in rc.conf"

    IFS=$'\n'
    for i in $STATICHOSTS; do
      echo "$i" | awk -F~ '{ print $2 "\t" $1 ($4 == "" ? "" : "\t# "$4); }'
    done
  fi
}

SYS_gen_etc_ethers()
{
  if [ -f /stat/etc/ethers ]; then
    cat /stat/etc/ethers
  fi

  if [ -f /mnt/kd/ethers ]; then
    cat /mnt/kd/ethers
  fi
}

SYS_is_vpn_type()
{
  # args: vpn_type
  local vpn IFS

  unset IFS
  for vpn in $VPN; do
    if [ "$vpn" = "$1" ]; then
      return 0
    fi
  done

  return 1
}
