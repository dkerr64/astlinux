#!/bin/sh

. /etc/rc.conf

WAN_LOCKFILE="/var/lock/wan-failover.lock"
WAN_PIDFILE="/var/run/wan-failover.pid"
WAN_STARTFILE="/var/run/wan-failover.start"
WAN_STATUSFILE="/var/log/wan-failover-status.log"
WAN_SCRIPTFILE="/mnt/kd/wan-failover.script"

init()
{
  :
}

start()
{
  if [ "$WAN_FAILOVER_ENABLE" = "yes" ] && [ ! -f "$WAN_LOCKFILE" ]; then
    echo "Starting WAN Failover..."

    # Start the background process
    start-stop-daemon -S -x /usr/sbin/wan-failover -b
  elif [ -f "$WAN_STARTFILE" ]; then
    rm "$WAN_STARTFILE"
  fi
}

stop()
{
  if [ -f "$WAN_PIDFILE" ]; then
    echo "Stopping WAN Failover..."

    #
    # kill $(cat $WAN_PIDFILE)
    # is not necessary.  Removing the PID file is sufficient
    # because the background process monitors its PID file.
    #
    rm -f "$WAN_PIDFILE"

    # Wait for the background process to exit
    cnt=10
    while [ $cnt -gt 0 -a -f "$WAN_LOCKFILE" ]; do
      cnt=$((cnt - 1))
      sleep 1
    done
  fi
}

status()
{
  if [ -f "$WAN_PIDFILE" ] && [ -s "$WAN_STATUSFILE" ]; then
    cat "$WAN_STATUSFILE"
    if [ -x $WAN_SCRIPTFILE ]; then
      $WAN_SCRIPTFILE "STATUS"
    fi
  fi
}

dotest()
{
  if [ -f "$WAN_PIDFILE" ]; then
    echo "Testing WAN Failover..."
    kill -HUP $(cat "$WAN_PIDFILE")
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  start
  ;;

status)
  status
  ;;

test)
  dotest
  ;;

*)
  echo "Usage: start|stop|restart|status|test"
  ;;

esac

